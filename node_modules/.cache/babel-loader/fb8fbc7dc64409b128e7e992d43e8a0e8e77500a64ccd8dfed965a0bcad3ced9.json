{"ast":null,"code":"import _objectSpread from \"C:/Users/user/Desktop/kipithonteam2/myapp/snowspot-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/user/Desktop/kipithonteam2/myapp/snowspot-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"className\"];\nimport React from 'react';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\nimport { SearchBarEmbed as _SearchBarEmbed } from '../embed/search-bar';\nimport { SearchEmbed as _SearchEmbed } from '../embed/search';\nimport { AppEmbed as _AppEmbed } from '../embed/app';\nimport { LiveboardEmbed as _LiveboardEmbed } from '../embed/liveboard';\nimport { getViewPropsAndListeners } from './util';\nvar componentFactory = function componentFactory(EmbedConstructor) {\n  return React.forwardRef(function (props, forwardedRef) {\n    var ref = React.useRef(null);\n    var className = props.className,\n      embedProps = _objectWithoutProperties(props, _excluded);\n    var _getViewPropsAndListe = getViewPropsAndListeners(embedProps),\n      viewConfig = _getViewPropsAndListe.viewConfig,\n      listeners = _getViewPropsAndListe.listeners;\n    useDeepCompareEffect(function () {\n      var tsEmbed = new EmbedConstructor(ref.current, _objectSpread({}, viewConfig));\n      Object.keys(listeners).forEach(function (eventName) {\n        tsEmbed.on(eventName, listeners[eventName]);\n      });\n      tsEmbed.render();\n      if (forwardedRef) {\n        // eslint-disable-next-line no-param-reassign\n        forwardedRef.current = tsEmbed;\n      }\n    }, [viewConfig, listeners]);\n    return React.createElement(\"div\", {\n      \"data-testid\": \"tsEmbed\",\n      ref: ref,\n      className: className\n    });\n  });\n};\nexport var SearchEmbed = componentFactory(_SearchEmbed);\nexport var AppEmbed = componentFactory(_AppEmbed);\nexport var LiveboardEmbed = componentFactory(_LiveboardEmbed);\nexport var PinboardEmbed = componentFactory(_LiveboardEmbed);\nexport var SearchBarEmbed = componentFactory(_SearchBarEmbed);\nexport var useEmbedRef = function useEmbedRef() {\n  return React.useRef(null);\n};","map":{"version":3,"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,oBAAoB,MAAM,yBAAyB;AAC1D,SACIC,cAAc,IAAIC,eAAe,QAE9B,qBAAqB;AAC5B,SAASC,WAAW,IAAIC,YAAY,QAA0B,iBAAiB;AAC/E,SAASC,QAAQ,IAAIC,SAAS,QAAuB,cAAc;AACnE,SACIC,cAAc,IAAIC,eAAe,QAE9B,oBAAoB;AAI3B,SAAqBC,wBAAwB,QAAQ,QAAQ;AAE7D,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,CAKlBC,gBAAmB;EAAA,OAEnBZ,KAAK,CAACa,UAAU,CACZ,UAACC,KAAQ,EAAEC,YAA6C,EAAI;IACxD,IAAMC,GAAG,GAAGhB,KAAK,CAACiB,MAAM,CAAiB,IAAI,CAAC;IAC9C,IAAQC,SAAS,GAAoBJ,KAAK,CAAlCI,SAAS;MAAKC,UAAU,4BAAKL,KAAK;IAC1C,4BAAkCJ,wBAAwB,CAGxDS,UAAU,CAAC;MAHLC,UAAU,yBAAVA,UAAU;MAAEC,SAAS,yBAATA,SAAS;IAI7BpB,oBAAoB,CAAC,YAAK;MACtB,IAAMqB,OAAO,GAAG,IAAIV,gBAAgB,CAACI,GAAI,CAACO,OAAO,oBAC1CH,UAAU,EACf;MACFI,MAAM,CAACC,IAAI,CAACJ,SAAS,CAAC,CAACK,OAAO,CAAC,UAACC,SAAS,EAAI;QACzCL,OAAO,CAACM,EAAE,CACND,SAAuB,EACvBN,SAAS,CAACM,SAAuB,CAAC,CACrC;MACL,CAAC,CAAC;MACFL,OAAO,CAACO,MAAM,EAAE;MAChB,IAAId,YAAY,EAAE;QACd;QACAA,YAAY,CAACQ,OAAO,GAAGD,OAAO;;IAEtC,CAAC,EAAE,CAACF,UAAU,EAAEC,SAAS,CAAC,CAAC;IAE3B,OACIrB;MAAA,eACgB,SAAS;MACrBgB,GAAG,EAAEA,GAAG;MACRE,SAAS,EAAEA;IAAS,EACjB;EAEf,CAAC,CACJ;AAAA;AAIL,OAAO,IAAMd,WAAW,GAAGO,gBAAgB,CAIzCN,YAAY,CAAC;AAIf,OAAO,IAAMC,QAAQ,GAAGK,gBAAgB,CAItCJ,SAAS,CAAC;AAIZ,OAAO,IAAMC,cAAc,GAAGG,gBAAgB,CAI5CF,eAAe,CAAC;AAElB,OAAO,IAAMqB,aAAa,GAAGnB,gBAAgB,CAI3CF,eAAe,CAAC;AAIlB,OAAO,IAAMP,cAAc,GAAGS,gBAAgB,CAI5CR,eAAe,CAAC;AAElB,OAAO,IAAM4B,WAAW,GAAG,SAAdA,WAAW,GAAyC;EAC7D,OAAO/B,KAAK,CAACiB,MAAM,CAAU,IAAI,CAAC;AACtC,CAAC","names":["React","useDeepCompareEffect","SearchBarEmbed","_SearchBarEmbed","SearchEmbed","_SearchEmbed","AppEmbed","_AppEmbed","LiveboardEmbed","_LiveboardEmbed","getViewPropsAndListeners","componentFactory","EmbedConstructor","forwardRef","props","forwardedRef","ref","useRef","className","embedProps","viewConfig","listeners","tsEmbed","current","Object","keys","forEach","eventName","on","render","PinboardEmbed","useEmbedRef"],"sources":["C:\\Users\\user\\Desktop\\kipithonteam2\\myapp\\snowspot-app\\node_modules\\@thoughtspot\\visual-embed-sdk\\src\\react\\index.tsx"],"sourcesContent":["import React from 'react';\nimport useDeepCompareEffect from 'use-deep-compare-effect';\nimport {\n    SearchBarEmbed as _SearchBarEmbed,\n    SearchBarViewConfig,\n} from '../embed/search-bar';\nimport { SearchEmbed as _SearchEmbed, SearchViewConfig } from '../embed/search';\nimport { AppEmbed as _AppEmbed, AppViewConfig } from '../embed/app';\nimport {\n    LiveboardEmbed as _LiveboardEmbed,\n    LiveboardViewConfig,\n} from '../embed/liveboard';\nimport { TsEmbed } from '../embed/ts-embed';\n\nimport { EmbedEvent, ViewConfig } from '../types';\nimport { EmbedProps, getViewPropsAndListeners } from './util';\n\nconst componentFactory = <\n    T extends typeof TsEmbed,\n    U extends EmbedProps,\n    V extends ViewConfig\n>(\n    EmbedConstructor: T,\n) =>\n    React.forwardRef<TsEmbed, U>(\n        (props: U, forwardedRef: React.MutableRefObject<TsEmbed>) => {\n            const ref = React.useRef<HTMLDivElement>(null);\n            const { className, ...embedProps } = props;\n            const { viewConfig, listeners } = getViewPropsAndListeners<\n                Omit<U, 'className'>,\n                V\n            >(embedProps);\n            useDeepCompareEffect(() => {\n                const tsEmbed = new EmbedConstructor(ref!.current, {\n                    ...viewConfig,\n                });\n                Object.keys(listeners).forEach((eventName) => {\n                    tsEmbed.on(\n                        eventName as EmbedEvent,\n                        listeners[eventName as EmbedEvent],\n                    );\n                });\n                tsEmbed.render();\n                if (forwardedRef) {\n                    // eslint-disable-next-line no-param-reassign\n                    forwardedRef.current = tsEmbed;\n                }\n            }, [viewConfig, listeners]);\n\n            return (\n                <div\n                    data-testid=\"tsEmbed\"\n                    ref={ref}\n                    className={className}\n                ></div>\n            );\n        },\n    );\n\ninterface SearchProps extends EmbedProps, SearchViewConfig {}\n\nexport const SearchEmbed = componentFactory<\n    typeof _SearchEmbed,\n    SearchProps,\n    SearchViewConfig\n>(_SearchEmbed);\n\ninterface AppProps extends EmbedProps, AppViewConfig {}\n\nexport const AppEmbed = componentFactory<\n    typeof _AppEmbed,\n    AppProps,\n    AppViewConfig\n>(_AppEmbed);\n\ninterface LiveboardProps extends EmbedProps, LiveboardViewConfig {}\n\nexport const LiveboardEmbed = componentFactory<\n    typeof _LiveboardEmbed,\n    LiveboardProps,\n    LiveboardViewConfig\n>(_LiveboardEmbed);\n\nexport const PinboardEmbed = componentFactory<\n    typeof _LiveboardEmbed,\n    LiveboardProps,\n    LiveboardViewConfig\n>(_LiveboardEmbed);\n\ninterface SearchBarEmbedProps extends EmbedProps, SearchBarViewConfig {}\n\nexport const SearchBarEmbed = componentFactory<\n    typeof _SearchBarEmbed,\n    SearchBarEmbedProps,\n    SearchBarViewConfig\n>(_SearchBarEmbed);\n\nexport const useEmbedRef = (): React.MutableRefObject<TsEmbed> => {\n    return React.useRef<TsEmbed>(null);\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/**\n * Copyright (c) 2022\n *\n * TypeScript type definitions for ThoughtSpot Visual Embed SDK\n *\n * @summary Type definitions for Embed SDK\n * @author Ayon Ghosh <ayon.ghosh@thoughtspot.com>\n */\n/**\n * The authentication mechanism for allowing access to the\n * the embedded app\n */\n// eslint-disable-next-line no-shadow\nexport var AuthType;\n(function (AuthType) {\n  /**\n   * No authentication on the SDK. Passthrough to the embedded App. Alias for `Passthrough`.\n   */\n  AuthType[\"None\"] = \"None\";\n  /**\n   * Passthrough SSO to the embedded App within the iframe. Requires least configuration, but may not\n   * be supported by all IDPs. This will behave like `None` if SSO is not configured on ThoughtSpot.\n   * @version: SDK: 1.15.0 | ThouhgtSpot: 8.8.0.cl\n   */\n  AuthType[\"EmbeddedSSO\"] = \"EmbeddedSSO\";\n  /**\n   * SSO using SAML\n   * @deprecated Use {@link SAMLRedirect} instead\n   * @hidden\n   */\n  AuthType[\"SSO\"] = \"SSO_SAML\";\n  /**\n   * SSO using SAML\n   * @deprecated Use {@link SAMLRedirect} instead\n   * @hidden\n   */\n  AuthType[\"SAML\"] = \"SSO_SAML\";\n  /**\n   * SSO using SAML\n   * Will make the host application redirect to the SAML Idp.\n   */\n  AuthType[\"SAMLRedirect\"] = \"SSO_SAML\";\n  /**\n   * SSO using OIDC\n   * @hidden\n   * @deprecated Use {@link OIDCRedirect} instead\n   */\n  AuthType[\"OIDC\"] = \"SSO_OIDC\";\n  /**\n   * SSO using OIDC\n   * Will make the host application redirect to the OIDC Idp.\n   */\n  AuthType[\"OIDCRedirect\"] = \"SSO_OIDC\";\n  /**\n   * Trusted authentication server\n   * @hidden\n   * @deprecated Use {@link TrustedAuth} instead\n   */\n  AuthType[\"AuthServer\"] = \"AuthServer\";\n  /**\n   * Trusted authentication server, Use you own authentication server\n   * which returns a bearer token, generated using the secret_key obtained from\n   * ThoughtSpot.\n   */\n  AuthType[\"TrustedAuthToken\"] = \"AuthServer\";\n  /**\n   * Use the ThoughtSpot login API to authenticate to the cluster directly.\n   *\n   * Warning: This feature is primarily intended for developer testing. It is\n   * strongly advised not to use this authentication method in production.\n   */\n  AuthType[\"Basic\"] = \"Basic\";\n})(AuthType || (AuthType = {}));\n/**\n * A map of the supported runtime filter operations\n */\n// eslint-disable-next-line no-shadow\nexport var RuntimeFilterOp;\n(function (RuntimeFilterOp) {\n  /**\n   * Equals\n   */\n  RuntimeFilterOp[\"EQ\"] = \"EQ\";\n  /**\n   * Does not equal\n   */\n  RuntimeFilterOp[\"NE\"] = \"NE\";\n  /**\n   * Less than\n   */\n  RuntimeFilterOp[\"LT\"] = \"LT\";\n  /**\n   * Less than or equal to\n   */\n  RuntimeFilterOp[\"LE\"] = \"LE\";\n  /**\n   * Greater than\n   */\n  RuntimeFilterOp[\"GT\"] = \"GT\";\n  /**\n   * Greater than or equal to\n   */\n  RuntimeFilterOp[\"GE\"] = \"GE\";\n  /**\n   * Contains\n   */\n  RuntimeFilterOp[\"CONTAINS\"] = \"CONTAINS\";\n  /**\n   * Begins with\n   */\n  RuntimeFilterOp[\"BEGINS_WITH\"] = \"BEGINS_WITH\";\n  /**\n   * Ends with\n   */\n  RuntimeFilterOp[\"ENDS_WITH\"] = \"ENDS_WITH\";\n  /**\n   * Between, inclusive of higher value\n   */\n  RuntimeFilterOp[\"BW_INC_MAX\"] = \"BW_INC_MAX\";\n  /**\n   * Between, inclusive of lower value\n   */\n  RuntimeFilterOp[\"BW_INC_MIN\"] = \"BW_INC_MIN\";\n  /**\n   * Between, inclusive of both higher and lower value\n   */\n  RuntimeFilterOp[\"BW_INC\"] = \"BW_INC\";\n  /**\n   * Between, non-inclusive\n   */\n  RuntimeFilterOp[\"BW\"] = \"BW\";\n  /**\n   * Is included in this list of values\n   */\n  RuntimeFilterOp[\"IN\"] = \"IN\";\n})(RuntimeFilterOp || (RuntimeFilterOp = {}));\n/**\n * Event types emitted by the embedded ThoughtSpot application.\n */\n// eslint-disable-next-line no-shadow\nexport var EmbedEvent;\n(function (EmbedEvent) {\n  /**\n   * Rendering has initialized.\n   * @return timestamp - The timestamp when the event was generated.\n   */\n  EmbedEvent[\"Init\"] = \"init\";\n  /**\n   * Authentication has either succeeded or failed.\n   * @return isLoggedIn - A Boolean specifying whether authentication was successful.\n   */\n  EmbedEvent[\"AuthInit\"] = \"authInit\";\n  /**\n   * The embed object container has loaded.\n   * @return timestamp - The timestamp when the event was generated.\n   */\n  EmbedEvent[\"Load\"] = \"load\";\n  /**\n   * Data pertaining to answer or Liveboard is received\n   * @return data - The answer or Liveboard data\n   */\n  EmbedEvent[\"Data\"] = \"data\";\n  /**\n   * Search/answer/Liveboard filters have been applied/updated\n   * @hidden\n   */\n  EmbedEvent[\"FiltersChanged\"] = \"filtersChanged\";\n  /**\n   * Search query has been updated\n   */\n  EmbedEvent[\"QueryChanged\"] = \"queryChanged\";\n  /**\n   * A drill down operation has been performed.\n   * @return additionalFilters - Any additional filters applied\n   * @return drillDownColumns - The columns on which drill down was performed\n   * @return nonFilteredColumns - The columns that were not filtered\n   */\n  EmbedEvent[\"Drilldown\"] = \"drillDown\";\n  /**\n   * One or more data sources have been selected.\n   * @return dataSourceIds - the list of data sources\n   */\n  EmbedEvent[\"DataSourceSelected\"] = \"dataSourceSelected\";\n  /**\n   * One or more data columns have been selected.\n   * @return columnIds - the list of columns\n   * @version SDK: 1.10.0 | ThoughtSpot: 8.2.0.cl, 8.4.1-sw\n   */\n  EmbedEvent[\"AddRemoveColumns\"] = \"addRemoveColumns\";\n  /**\n   * A custom action has been triggered\n   * @return actionId - The id of the custom action\n   * @return data - The answer or Liveboard data\n   */\n  EmbedEvent[\"CustomAction\"] = \"customAction\";\n  /**\n   * A double click has been triggered on table/chart\n   * @return ContextMenuInputPoints - data point that is double clicked\n   * @version SDK: 1.5.0 | ThoughtSpot: ts7.oct.cl, 7.2.1\n   */\n  EmbedEvent[\"VizPointDoubleClick\"] = \"vizPointDoubleClick\";\n  /**\n   * A click has been triggered on table/chart\n   * @return ContextMenuInputPoints - data point that is clicked\n   * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n   */\n  EmbedEvent[\"VizPointClick\"] = \"vizPointClick\";\n  /**\n   * An error has occurred.\n   * @return error - An error object or message\n   */\n  EmbedEvent[\"Error\"] = \"Error\";\n  /**\n   * The embedded object has sent an alert\n   * @return alert - An alert object\n   */\n  EmbedEvent[\"Alert\"] = \"alert\";\n  /**\n   * The ThoughtSpot auth session has expired.\n   */\n  EmbedEvent[\"AuthExpire\"] = \"ThoughtspotAuthExpired\";\n  /**\n   * ThoughtSpot failed to validate the auth session.\n   * @hidden\n   */\n  EmbedEvent[\"AuthFailure\"] = \"ThoughtspotAuthFailure\";\n  /**\n   * ThoughtSpot failed to validate the auth session.\n   * @hidden\n   */\n  EmbedEvent[\"AuthLogout\"] = \"ThoughtspotAuthLogout\";\n  /**\n   * The height of the embedded Liveboard or visualization has been computed.\n   * @return data - The height of the embedded Liveboard or visualization\n   * @hidden\n   */\n  EmbedEvent[\"EmbedHeight\"] = \"EMBED_HEIGHT\";\n  /**\n   * The center of visible iframe viewport is calculated.\n   * @return data - The center of the visible Iframe viewport.\n   * @hidden\n   */\n  EmbedEvent[\"EmbedIframeCenter\"] = \"EmbedIframeCenter\";\n  /**\n   * Detects the route change.\n   */\n  EmbedEvent[\"RouteChange\"] = \"ROUTE_CHANGE\";\n  /**\n   * The v1 event type for Data\n   * @hidden\n   */\n  EmbedEvent[\"V1Data\"] = \"exportVizDataToParent\";\n  /**\n   * Emitted when the embed does not have cookie access. This\n   * happens on Safari where third-party cookies are blocked by default.\n   *\n   * @version SDK: 1.1.0 | ThoughtSpot: ts7.may.cl, 7.2.1\n   */\n  EmbedEvent[\"NoCookieAccess\"] = \"noCookieAccess\";\n  /**\n   * Emitted when SAML is complete\n   * @private\n   * @hidden\n   */\n  EmbedEvent[\"SAMLComplete\"] = \"samlComplete\";\n  /**\n   * Emitted when any modal is opened in the app\n   * @version SDK: 1.6.0 | ThoughtSpot: ts8.nov.cl, 8.4.1-sw\n   */\n  EmbedEvent[\"DialogOpen\"] = \"dialog-open\";\n  /**\n   * Emitted when any modal is closed in the app\n   * @version SDK: 1.6.0 | ThoughtSpot: ts8.nov.cl, 8.4.1-sw\n   */\n  EmbedEvent[\"DialogClose\"] = \"dialog-close\";\n  /**\n   * Emitted when a liveboard has completed rendering,\n   * this event can be used as a hook to trigger events on the\n   * rendered liveboard\n   * @version SDK: 1.9.1 | ThoughtSpot: 8.1.0.cl, 8.4.1-sw\n   */\n  EmbedEvent[\"LiveboardRendered\"] = \"PinboardRendered\";\n  /**\n   * This can be used to register an event listener which\n   * is triggered on all events.\n   * @Version SDK: 1.10.0 | ThoughtSpot: 8.2.0.cl, 8.4.1-sw\n   */\n  EmbedEvent[\"ALL\"] = \"*\";\n  /**\n   * Emitted when answer is saved in the app\n   * @Version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n   */\n  EmbedEvent[\"Save\"] = \"save\";\n  /**\n   * Emitted when the download action is triggered on an answer\n   * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n   */\n  EmbedEvent[\"Download\"] = \"download\";\n  /**\n   * Emitted when the Download as PDF action is triggered on an answer\n   * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n   */\n  EmbedEvent[\"DownloadAsPdf\"] = \"downloadAsPdf\";\n  /**\n   * Emitted when the Download as CSV action is triggered on an answer\n   * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n   */\n  EmbedEvent[\"DownloadAsCsv\"] = \"downloadAsCsv\";\n  /**\n   * Emitted when the Download as XLSX action is triggered on an answer\n   * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n   */\n  EmbedEvent[\"DownloadAsXlsx\"] = \"downloadAsXlsx\";\n  /**\n   * Emitted when an answer is deleted in the app\n   * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n   */\n  EmbedEvent[\"AnswerDelete\"] = \"answerDelete\";\n  /**\n   * Emitted when an answer is pinned to a Liveboard\n   * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n   */\n  EmbedEvent[\"Pin\"] = \"pin\";\n  /**\n   * Emitted when SpotIQ analysis is triggered\n   * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n   */\n  EmbedEvent[\"SpotIQAnalyze\"] = \"spotIQAnalyze\";\n  /**\n   * Emitted when a user shares an object with another user or group\n   * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n   */\n  EmbedEvent[\"Share\"] = \"share\";\n  /**\n   * Emitted when a user clicks the Include action to include a specific value or data on a chart or table\n   * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n   */\n  EmbedEvent[\"DrillInclude\"] = \"context-menu-item-include\";\n  /**\n   * Emitted when a user clicks the Exclude action to exclude a specific value or data on a chart or table\n   * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n   */\n  EmbedEvent[\"DrillExclude\"] = \"context-menu-item-exclude\";\n  /**\n   * Emitted when copied column value on the app\n   * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n   */\n  EmbedEvent[\"CopyToClipboard\"] = \"context-menu-item-copy-to-clipboard\";\n  /**\n   * Emitted when a user clicks the Update TML action\n   * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n   */\n  EmbedEvent[\"UpdateTML\"] = \"updateTSL\";\n  /**\n   * Emitted when a user clicks the Edit TML action\n   * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n   */\n  EmbedEvent[\"EditTML\"] = \"editTSL\";\n  /**\n   * Emitted when ExportTML trigger in answer on the app\n   * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n   */\n  EmbedEvent[\"ExportTML\"] = \"exportTSL\";\n  /**\n   * Emitted when an answer is saved as a view\n   * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n   */\n  EmbedEvent[\"SaveAsView\"] = \"saveAsView\";\n  /**\n   * Emitted when copy of existing answer on the app\n   * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n   */\n  EmbedEvent[\"CopyAEdit\"] = \"copyAEdit\";\n  /**\n   * Emitted when a user clicks Show underlying data on an answe\n   * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n   */\n  EmbedEvent[\"ShowUnderlyingData\"] = \"showUnderlyingData\";\n  /**\n   * Emitted when an answer is switched to a chart or table view\n   * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n   */\n  EmbedEvent[\"AnswerChartSwitcher\"] = \"answerChartSwitcher\";\n  /**\n   * Internal event to communicate the initial settings back to the TS APP\n   * @hidden\n   */\n  EmbedEvent[\"APP_INIT\"] = \"appInit\";\n  /**\n   * Emitted when a user clicks Show Liveboard details on a Liveboard\n   * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n   */\n  EmbedEvent[\"LiveboardInfo\"] = \"pinboardInfo\";\n  /**\n   * Emitted when a user clicks on the Favorite icon on a Liveboard\n   * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n   */\n  EmbedEvent[\"AddToFavorites\"] = \"addToFavorites\";\n  /**\n   * Emitted when a user clicks Schedule on a Liveboard\n   * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n   */\n  EmbedEvent[\"Schedule\"] = \"subscription\";\n  /**\n   * Emitted when a user clicks Edit on a Liveboard or visualization\n   * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n   */\n  EmbedEvent[\"Edit\"] = \"edit\";\n  /**\n   * Emitted when a user clicks Make a copy on a Liveboard\n   * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n   */\n  EmbedEvent[\"MakeACopy\"] = \"makeACopy\";\n  /**\n   * Emitted when a user clicks Present on a Liveboard or visualization\n   * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n   */\n  EmbedEvent[\"Present\"] = \"present\";\n  /**\n   * Emitted when a user clicks Delete on a Liveboard\n   * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n   */\n  EmbedEvent[\"Delete\"] = \"delete\";\n  /**\n   * Emitted when a user clicks Manage schedules on a Liveboard\n   * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n   */\n  EmbedEvent[\"SchedulesList\"] = \"schedule-list\";\n  /**\n   * Emitted when a user clicks Cancel in edit mode on a Liveboard\n   * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n   */\n  EmbedEvent[\"Cancel\"] = \"cancel\";\n  /**\n   * Emitted when a user clicks Explore on a visualization\n   * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n   */\n  EmbedEvent[\"Explore\"] = \"explore\";\n  /**\n   * Emitted when a user clicks Copy link action on a visualization\n   * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n   */\n  EmbedEvent[\"CopyLink\"] = \"embedDocument\";\n})(EmbedEvent || (EmbedEvent = {}));\n/**\n * Event types that can be triggered by the host application\n * to the embedded ThoughtSpot app\n *\n * To trigger an event use the corresponding\n * {@link LiveboardEmbed.trigger} or {@link AppEmbed.trigger} or {@link SearchEmbed.trigger} method.\n */\n// eslint-disable-next-line no-shadow\nexport var HostEvent;\n(function (HostEvent) {\n  /**\n   * Trigger a search\n   * @param - dataSourceIds - The list of data source GUIDs\n   * @param - searchQuery - The search query\n   * @example\n   * searchEmbed.trigger(HostEvent.Search, {\n   * searchQuery: \"[sales] by [item type],\n   * \"dataSourceIds: [\"cd252e5c-b552-49a8-821d-3eadaa049cca\"]\n   * })\n   */\n  HostEvent[\"Search\"] = \"search\";\n  /**\n   * Trigger a drill on certain points by certain column\n   * @param - points - an object containing selectedPoints/clickedPoints\n   *              eg. { selectedPoints: []}\n   * @param - columnGuid - a string guid of the column to drill by. This is optional,\n   *                     if not provided it will auto drill by the configured column.\n   * @example searchEmbed.trigger(HostEvent.DrillDown, {\n   * points: clickedPointData,\n   * autoDrillDown: true,\n   * })\n   * @version SDK: 1.5.0 | ThoughtSpot: ts7.oct.cl, 7.2.1\n   */\n  HostEvent[\"DrillDown\"] = \"triggerDrillDown\";\n  /**\n   * Apply filters\n   * @hidden\n   */\n  HostEvent[\"Filter\"] = \"filter\";\n  /**\n   * Reload the answer or visualization\n   * @hidden\n   */\n  HostEvent[\"Reload\"] = \"reload\";\n  /**\n   * Set the visible visualizations on a Liveboard.\n   * @param - an array of ids of visualizations to show, the ids not passed\n   *          will be hidden.\n   * @example\n   * liveboardEmbed.trigger(HostEvent.SetVisibleVizs, ['730496d6-6903-4601-937e-2c691821af3c', 'd547ec54-2a37-4516-a222-2b06719af726'])\n   * @version SDK: 1.6.0 | ThoughtSpot: ts8.nov.cl, 8.4.1-sw\n   */\n  HostEvent[\"SetVisibleVizs\"] = \"SetPinboardVisibleVizs\";\n  /**\n   * Update the runtime filters. The runtime filters passed here are extended\n   * on to the existing runtime filters if they exist.\n   * @param - {@link RuntimeFilter}[] an array of {@link RuntimeFilter} Types.\n   * @example\n   * liveboardEmbed.trigger(HostEvent.UpdateRuntimeFilters, [\n   * {columnName: \"state\",operator: RuntimeFilterOp.EQ,values: [\"michigan\"]},\n   * {columnName: \"item type\",operator: RuntimeFilterOp.EQ,values: [\"Jackets\"]}\n   * ])\n   * @version SDK: 1.9.0 | ThoughtSpot: 8.1.0.cl, 8.4.1-sw\n   */\n  HostEvent[\"UpdateRuntimeFilters\"] = \"UpdateRuntimeFilters\";\n  /**\n   * Navigate to a specific page in App embed without any reload.\n   * This is the same as calling `appEmbed.navigateToPage(path, true)`\n   * @param - path - the path to navigate to (can be a number[1/-1] to go forward/back)\n   * @example appEmbed.navigateToPage(-1)\n   * @version SDK: 1.12.0 | ThoughtSpot 8.4.0.cl, 8.4.1-sw\n   */\n  HostEvent[\"Navigate\"] = \"Navigate\";\n  /**\n   * Gets the current pinboard content.\n   * @example liveboardEmbed.trigger(HostEvent.getExportRequestForCurrentPinboard)\n   * @version SDK: 1.13.0 | ThoughtSpot: 8.5.0.cl, 8.8.1-sw\n   */\n  HostEvent[\"getExportRequestForCurrentPinboard\"] = \"getExportRequestForCurrentPinboard\";\n  /**\n   * Triggers the Pin action on an embedded object\n   * @param - incase of Liveboard embed, takes in an object with vizId as a key\n   * can be left empty for search and visualization embeds\n   * @example liveboardEmbed.trigger(HostEvent.Pin, {vizId: '730496d6-6903-4601-937e-2c691821af3c'})\n   * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n   */\n  HostEvent[\"Pin\"] = \"pin\";\n  /**\n   * Triggers the Show Liveboard details action on a Liveboard\n   * @example liveboardEmbed.trigger(HostEvent.LiveboardInfo)\n   * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n   */\n  HostEvent[\"LiveboardInfo\"] = \"pinboardInfo\";\n  /**\n   * Triggers the Schedule action on a Liveboard\n   * @example liveboardEmbed.trigger(HostEvent.Schedule)\n   * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n   */\n  HostEvent[\"Schedule\"] = \"subscription\";\n  /**\n   * Triggers the Manage schedule action on a Liveboard\n   * @example liveboardEmbed.trigger(HostEvent.ScheduleList)\n   * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n   */\n  HostEvent[\"SchedulesList\"] = \"schedule-list\";\n  /**\n   * Triggers the Export TML action on a Liveboard\n   * @example liveboardEmbed.trigger(HostEvent.ExportTML)\n   * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n   */\n  HostEvent[\"ExportTML\"] = \"exportTSL\";\n  /**\n   * Triggers the Edit TML action on a Liveboard\n   * @example liveboardEmbed.trigger(HostEvent.EditTML)\n   * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n   */\n  HostEvent[\"EditTML\"] = \"editTSL\";\n  /**\n   * Triggers the Update TML action on a Liveboard\n   * @example liveboardEmbed.trigger(HostEvent.UpdateTML)\n   * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n   */\n  HostEvent[\"UpdateTML\"] = \"updateTSL\";\n  /**\n   * Triggers the Download PDF action on a Liveboard\n   * @example liveboardEmbed.trigger(HostEvent.DownloadAsPDF)\n   * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n   */\n  HostEvent[\"DownloadAsPdf\"] = \"downloadAsPdf\";\n  /**\n   * Triggers the Make a copy action on a Liveboard\n   * @example liveboardEmbed.trigger(HostEvent.MakeACopy)\n   * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n   */\n  HostEvent[\"MakeACopy\"] = \"makeACopy\";\n  /**\n   * Triggers the Delete action on a Liveboard\n   * @example appEmbed.trigger(HostEvent.Remove)\n   * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n   */\n  HostEvent[\"Remove\"] = \"delete\";\n  /**\n   * Triggers the Explore action on a visualization\n   * @param - an object with vizId as a key\n   * @example liveboardEmbed.trigger(HostEvent.Explore, {vizId: '730496d6-6903-4601-937e-2c691821af3c'})\n   * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n   */\n  HostEvent[\"Explore\"] = \"explore\";\n  /**\n   * Triggers the Create alert action on a visualization\n   * @param - an object with vizId as a key\n   * @example liveboardEmbed.trigger(HostEvent.CreateMonitor {vizId: '730496d6-6903-4601-937e-2c691821af3c'})\n   * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n   */\n  HostEvent[\"CreateMonitor\"] = \"createMonitor\";\n  /**\n   * Triggers the Manage alert action on a visualization\n   * @param - an object with vizId as a key\n   * @example liveboardEmbed.trigger(HostEvent.ManageMonitor, {vizId: '730496d6-6903-4601-937e-2c691821af3c'})\n   * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n   */\n  HostEvent[\"ManageMonitor\"] = \"manageMonitor\";\n  /**\n   * Triggers the Edit action on a Liveboard or visualization\n   * @param - object - to trigger the action for a specfic visualization in Liveboard embed, pass in vizId as a key\n   * @example\n   * liveboardEmbed.trigger(HostEvent.Edit)\n   * liveboardEmbed.trigger(HostEvent.Edit, {vizId: '730496d6-6903-4601-937e-2c691821af3c'})\n   * vizEmbed.trigger((HostEvent.Edit)\n   * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n   */\n  HostEvent[\"Edit\"] = \"edit\";\n  /**\n   * Triggers the Copy link action on a Liveboard or visualization\n   * @param - object - to trigger the action for a specfic visualization in Liveboard embed, pass in vizId as a key\n   * @example\n   * liveboardEmbed.trigger(HostEvent.CopyLink)\n   * liveboardEmbed.trigger(HostEvent.CopyLink, {vizId: '730496d6-6903-4601-937e-2c691821af3c'})\n   * vizEmbed.trigger((HostEvent.CopyLink)\n   * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n   */\n  HostEvent[\"CopyLink\"] = \"embedDocument\";\n  /**\n   * Triggers the Present action on a Liveboard or visualization\n   * @param - object - to trigger the action for a specfic visualization in Liveboard embed, pass in vizId as a key\n   * @example\n   * liveboardEmbed.trigger(HostEvent.Present)\n   * liveboardEmbed.trigger(HostEvent.Present, {vizId: '730496d6-6903-4601-937e-2c691821af3c'})\n   * vizEmbed.trigger((HostEvent.Present)\n   * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n   */\n  HostEvent[\"Present\"] = \"present\";\n  /**\n   * Get TML for the current search.\n   * @example searchEmbed.trigger(HostEvent.GetTML)\n   * @version SDK: 1.18.0 | ThoughtSpot: 8.10.0.cl, 9.0.1-sw\n   */\n  HostEvent[\"GetTML\"] = \"getTML\";\n  /**\n   * Triggers the Share action on a liveboard or answer\n   * @example\n   * liveboardEmbed.trigger(HostEvent.Share)\n   * searchEmbed.trigger(HostEvent.Share)\n   * @version SDK: 1.19.0 | Thoughtspot: 9.0.0.cl, 9.0.1-sw\n   */\n  HostEvent[\"Share\"] = \"share\";\n  /**\n   * Trigger the Save action on a liveboard or answer\n   * @example\n   * liveboardEmbed.trigger(HostEvent.Save)\n   * searchEmbed.trigger(HostEvent.Save)\n   * @version SDK: 1.19.0 | Thoughtspot: 9.0.0.cl, 9.0.1-sw\n   */\n  HostEvent[\"Save\"] = \"save\";\n})(HostEvent || (HostEvent = {}));\n/**\n * The different visual modes that the data sources panel within\n * search could appear in, i.e., hidden, collapsed, or expanded.\n */\n// eslint-disable-next-line no-shadow\nexport var DataSourceVisualMode;\n(function (DataSourceVisualMode) {\n  /**\n   * Data source panel is hidden.\n   */\n  DataSourceVisualMode[\"Hidden\"] = \"hide\";\n  /**\n   * Data source panel is collapsed, but the user can manually expand it.\n   */\n  DataSourceVisualMode[\"Collapsed\"] = \"collapse\";\n  /**\n   * Data source panel is expanded, but the user can manually collapse it.\n   */\n  DataSourceVisualMode[\"Expanded\"] = \"expand\";\n})(DataSourceVisualMode || (DataSourceVisualMode = {}));\n/**\n * The query params passed down to the embedded ThoughtSpot app\n * containing configuration and/or visual information.\n */\n// eslint-disable-next-line no-shadow\nexport var Param;\n(function (Param) {\n  Param[\"DataSources\"] = \"dataSources\";\n  Param[\"DataSourceMode\"] = \"dataSourceMode\";\n  Param[\"DisableActions\"] = \"disableAction\";\n  Param[\"DisableActionReason\"] = \"disableHint\";\n  Param[\"ForceTable\"] = \"forceTable\";\n  Param[\"preventLiveboardFilterRemoval\"] = \"preventPinboardFilterRemoval\";\n  Param[\"SearchQuery\"] = \"searchQuery\";\n  Param[\"HideActions\"] = \"hideAction\";\n  Param[\"HideObjects\"] = \"hideObjects\";\n  Param[\"HostAppUrl\"] = \"hostAppUrl\";\n  Param[\"EnableVizTransformations\"] = \"enableVizTransform\";\n  Param[\"EnableSearchAssist\"] = \"enableSearchAssist\";\n  Param[\"HideResult\"] = \"hideResult\";\n  Param[\"UseLastSelectedDataSource\"] = \"useLastSelectedSources\";\n  Param[\"Tag\"] = \"tag\";\n  Param[\"searchTokenString\"] = \"searchTokenString\";\n  Param[\"executeSearch\"] = \"executeSearch\";\n  Param[\"fullHeight\"] = \"isFullHeightPinboard\";\n  Param[\"livedBoardEmbed\"] = \"isLiveboardEmbed\";\n  Param[\"searchEmbed\"] = \"isSearchEmbed\";\n  Param[\"vizEmbed\"] = \"isVizEmbed\";\n  Param[\"Version\"] = \"sdkVersion\";\n  Param[\"ViewPortHeight\"] = \"viewPortHeight\";\n  Param[\"ViewPortWidth\"] = \"viewPortWidth\";\n  Param[\"VisibleActions\"] = \"visibleAction\";\n  Param[\"CustomCSSUrl\"] = \"customCssUrl\";\n  Param[\"DisableLoginRedirect\"] = \"disableLoginRedirect\";\n  Param[\"visibleVizs\"] = \"pinboardVisibleVizs\";\n  Param[\"LiveboardV2Enabled\"] = \"isPinboardV2Enabled\";\n  Param[\"ShowAlerts\"] = \"showAlerts\";\n  Param[\"Locale\"] = \"locale\";\n  Param[\"CustomStyle\"] = \"customStyle\";\n  Param[\"ForceSAMLAutoRedirect\"] = \"forceSAMLAutoRedirect\";\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  Param[\"AuthType\"] = \"authType\";\n})(Param || (Param = {}));\n/**\n * The list of actions that can be performed on visual ThoughtSpot\n * entities, such as answers and Liveboards.\n */\n// eslint-disable-next-line no-shadow\nexport var Action;\n(function (Action) {\n  Action[\"Save\"] = \"save\";\n  /**\n   * @hidden\n   */\n  Action[\"Update\"] = \"update\";\n  /**\n   * @hidden\n   */\n  Action[\"SaveUntitled\"] = \"saveUntitled\";\n  Action[\"SaveAsView\"] = \"saveAsView\";\n  Action[\"MakeACopy\"] = \"makeACopy\";\n  Action[\"EditACopy\"] = \"editACopy\";\n  Action[\"CopyLink\"] = \"embedDocument\";\n  /**\n   * @hidden\n   */\n  Action[\"ResetLayout\"] = \"resetLayout\";\n  Action[\"Schedule\"] = \"subscription\";\n  Action[\"SchedulesList\"] = \"schedule-list\";\n  Action[\"Share\"] = \"share\";\n  Action[\"AddFilter\"] = \"addFilter\";\n  Action[\"ConfigureFilter\"] = \"configureFilter\";\n  /**\n   * @hidden\n   */\n  Action[\"AddFormula\"] = \"addFormula\";\n  /**\n   * @hidden\n   */\n  Action[\"SearchOnTop\"] = \"searchOnTop\";\n  Action[\"SpotIQAnalyze\"] = \"spotIQAnalyze\";\n  /**\n   * @hidden\n   */\n  Action[\"ExplainInsight\"] = \"explainInsight\";\n  /**\n   * @hidden\n   */\n  Action[\"SpotIQFollow\"] = \"spotIQFollow\";\n  Action[\"ShareViz\"] = \"shareViz\";\n  /**\n   * @hidden\n   */\n  Action[\"ReplaySearch\"] = \"replaySearch\";\n  Action[\"ShowUnderlyingData\"] = \"showUnderlyingData\";\n  Action[\"Download\"] = \"download\";\n  Action[\"DownloadAsPdf\"] = \"downloadAsPdf\";\n  Action[\"DownloadAsCsv\"] = \"downloadAsCSV\";\n  Action[\"DownloadAsXlsx\"] = \"downloadAsXLSX\";\n  /**\n   * @hidden\n   */\n  Action[\"DownloadTrace\"] = \"downloadTrace\";\n  Action[\"ExportTML\"] = \"exportTSL\";\n  Action[\"ImportTML\"] = \"importTSL\";\n  Action[\"UpdateTML\"] = \"updateTSL\";\n  Action[\"EditTML\"] = \"editTSL\";\n  Action[\"Present\"] = \"present\";\n  Action[\"ToggleSize\"] = \"toggleSize\";\n  Action[\"Edit\"] = \"edit\";\n  Action[\"EditTitle\"] = \"editTitle\";\n  Action[\"Remove\"] = \"delete\";\n  /**\n   * @hidden\n   */\n  Action[\"Ungroup\"] = \"ungroup\";\n  /**\n   * @hidden\n   */\n  Action[\"Describe\"] = \"describe\";\n  /**\n   * @hidden\n   */\n  Action[\"Relate\"] = \"relate\";\n  /**\n   * @hidden\n   */\n  Action[\"CustomizeHeadlines\"] = \"customizeHeadlines\";\n  /**\n   * @hidden\n   */\n  Action[\"PinboardInfo\"] = \"pinboardInfo\";\n  Action[\"LiveboardInfo\"] = \"pinboardInfo\";\n  /**\n   * @hidden\n   */\n  Action[\"SendAnswerFeedback\"] = \"sendFeedback\";\n  /**\n   * @hidden\n   */\n  Action[\"DownloadEmbraceQueries\"] = \"downloadEmbraceQueries\";\n  Action[\"Pin\"] = \"pin\";\n  /**\n   * @hidden\n   */\n  Action[\"AnalysisInfo\"] = \"analysisInfo\";\n  Action[\"Subscription\"] = \"subscription\";\n  Action[\"Explore\"] = \"explore\";\n  Action[\"DrillInclude\"] = \"context-menu-item-include\";\n  Action[\"DrillExclude\"] = \"context-menu-item-exclude\";\n  Action[\"CopyToClipboard\"] = \"context-menu-item-copy-to-clipboard\";\n  Action[\"CopyAndEdit\"] = \"context-menu-item-copy-and-edit\";\n  /**\n   * @hidden\n   */\n  Action[\"DrillEdit\"] = \"context-menu-item-edit\";\n  Action[\"EditMeasure\"] = \"context-menu-item-edit-measure\";\n  Action[\"Separator\"] = \"context-menu-item-separator\";\n  /**\n   * @hidden\n   */\n  Action[\"DrillDown\"] = \"DRILL\";\n  Action[\"RequestAccess\"] = \"requestAccess\";\n  Action[\"QueryDetailsButtons\"] = \"queryDetailsButtons\";\n  /**\n   * @version SDK: 1.9.0 | ThoughtSpot: 8.1.0.cl, 8.4.1-sw\n   */\n  Action[\"AnswerDelete\"] = \"onDeleteAnswer\";\n  /**\n   * @version SDK: 1.9.0 | ThoughtSpot: 8.1.0.cl, 8.4.1-sw\n   */\n  Action[\"AnswerChartSwitcher\"] = \"answerChartSwitcher\";\n  /**\n   * @version SDK: 1.9.0 | ThoughtSpot: 8.1.0.cl, 8.4.1-sw\n   */\n  Action[\"AddToFavorites\"] = \"addToFavorites\";\n  /**\n   * @version SDK: 1.9.0 | ThoughtSpot: 8.1.0.cl, 8.4.1-sw\n   */\n  Action[\"EditDetails\"] = \"editDetails\";\n  /**\n   * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n   */\n  Action[\"CreateMonitor\"] = \"createMonitor\";\n  /**\n   * @version SDK: 1.11.1 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n   */\n  Action[\"ReportError\"] = \"reportError\";\n  Action[\"SyncToSheets\"] = \"sync-to-sheets\";\n  Action[\"SyncToOtherApps\"] = \"sync-to-other-apps\";\n  Action[\"ManagePipelines\"] = \"manage-pipeline\";\n})(Action || (Action = {}));\n// eslint-disable-next-line no-shadow\nexport var OperationType;\n(function (OperationType) {\n  OperationType[\"GetChartWithData\"] = \"GetChartWithData\";\n  OperationType[\"GetTableWithHeadlineData\"] = \"GetTableWithHeadlineData\";\n})(OperationType || (OperationType = {}));\nexport var PrefetchFeatures;\n(function (PrefetchFeatures) {\n  PrefetchFeatures[\"FullApp\"] = \"FullApp\";\n  PrefetchFeatures[\"SearchEmbed\"] = \"SearchEmbed\";\n  PrefetchFeatures[\"LiveboardEmbed\"] = \"LiveboardEmbed\";\n  PrefetchFeatures[\"VizEmbed\"] = \"VizEmbed\";\n})(PrefetchFeatures || (PrefetchFeatures = {}));","map":{"version":3,"mappings":"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","names":["AuthType","RuntimeFilterOp","EmbedEvent","HostEvent","DataSourceVisualMode","Param","Action","OperationType","PrefetchFeatures"],"sources":["C:\\Users\\user\\Desktop\\kipithonteam2\\myapp\\snowspot-app\\node_modules\\@thoughtspot\\visual-embed-sdk\\src\\types.ts"],"sourcesContent":["/**\n * Copyright (c) 2022\n *\n * TypeScript type definitions for ThoughtSpot Visual Embed SDK\n *\n * @summary Type definitions for Embed SDK\n * @author Ayon Ghosh <ayon.ghosh@thoughtspot.com>\n */\n\n/**\n * The authentication mechanism for allowing access to the\n * the embedded app\n */\n// eslint-disable-next-line no-shadow\nexport enum AuthType {\n    /**\n     * No authentication on the SDK. Passthrough to the embedded App. Alias for `Passthrough`.\n     */\n    None = 'None',\n    /**\n     * Passthrough SSO to the embedded App within the iframe. Requires least configuration, but may not\n     * be supported by all IDPs. This will behave like `None` if SSO is not configured on ThoughtSpot.\n     * @version: SDK: 1.15.0 | ThouhgtSpot: 8.8.0.cl\n     */\n    EmbeddedSSO = 'EmbeddedSSO',\n    /**\n     * SSO using SAML\n     * @deprecated Use {@link SAMLRedirect} instead\n     * @hidden\n     */\n    SSO = 'SSO_SAML',\n    /**\n     * SSO using SAML\n     * @deprecated Use {@link SAMLRedirect} instead\n     * @hidden\n     */\n    SAML = 'SSO_SAML',\n    /**\n     * SSO using SAML\n     * Will make the host application redirect to the SAML Idp.\n     */\n    SAMLRedirect = 'SSO_SAML',\n    /**\n     * SSO using OIDC\n     * @hidden\n     * @deprecated Use {@link OIDCRedirect} instead\n     */\n    OIDC = 'SSO_OIDC',\n    /**\n     * SSO using OIDC\n     * Will make the host application redirect to the OIDC Idp.\n     */\n    OIDCRedirect = 'SSO_OIDC',\n    /**\n     * Trusted authentication server\n     * @hidden\n     * @deprecated Use {@link TrustedAuth} instead\n     */\n    AuthServer = 'AuthServer',\n    /**\n     * Trusted authentication server, Use you own authentication server\n     * which returns a bearer token, generated using the secret_key obtained from\n     * ThoughtSpot.\n     */\n    TrustedAuthToken = 'AuthServer',\n    /**\n     * Use the ThoughtSpot login API to authenticate to the cluster directly.\n     *\n     * Warning: This feature is primarily intended for developer testing. It is\n     * strongly advised not to use this authentication method in production.\n     */\n    Basic = 'Basic',\n}\n\nexport type DOMSelector = string | HTMLElement;\n\ninterface customCssInterface {\n    variables?: {\n        [variableName: string]: string;\n    };\n    // eslint-disable-next-line camelcase\n    rules_UNSTABLE?: {\n        [selector: string]: {\n            [declaration: string]: string;\n        };\n    };\n}\ninterface CustomStyles {\n    customCSSUrl?: string;\n    customCSS?: customCssInterface;\n}\nexport interface CustomisationsInterface {\n    style?: CustomStyles;\n    content?: {\n        [key: string]: string;\n    };\n}\n\n/**\n * The configuration object for embedding ThoughtSpot content.\n * It includes the ThoughtSpot hostname or IP address,\n * the type of authentication, and the authentication endpoint\n * if a trusted authentication server is used.\n */\nexport interface EmbedConfig {\n    /**\n     * The ThoughtSpot cluster hostname or IP address.\n     */\n    thoughtSpotHost: string;\n    /**\n     * The authentication mechanism to use.\n     */\n    authType: AuthType;\n    /**\n     * [AuthServer] The trusted authentication endpoint to use to get the\n     * authentication token. A GET request is made to the\n     * authentication API endpoint, which  returns the token\n     * as a plaintext response. For trusted authentication,\n     * the `authEndpoint` or `getAuthToken` attribute is required.\n     */\n    authEndpoint?: string;\n    /**\n     * [AuthServer] A function that invokes the trusted authentication endpoint\n     * and returns a Promise that resolves to the `auth token` string.\n     * For trusted authentication, the `authEndpoint` or `getAuthToken`\n     * attribute is required.\n     *\n     * It is advisable to fetch a new token inside this method and not\n     * reuse and older issued token, as because when auth expires this is\n     * called again and if it is called with an older token the authentication\n     * will not succeed.\n     */\n    getAuthToken?: () => Promise<string>;\n    /**\n     * [AuthServer / Basic] The user name of the ThoughtSpot user. This attribute is\n     * required for trusted authentication.\n     */\n    username?: string;\n\n    /**\n     * [Basic] The ThoughtSpot login password corresponding to the user name\n     *\n     * Warning: This feature is primarily intended for developer testing. It is\n     * strongly advised not to use this authentication method in production.\n     */\n    password?: string;\n\n    /**\n     * [SSO] For SSO Authentication, if `noRedirect` is set to true, it will open the SAML auth\n     * flow in a popup, instead of redirecting browser in place.\n     *\n     * @default false\n     */\n    noRedirect?: boolean;\n\n    /**\n     * [SSO] For SSO Authentication, one can supply an optional path param,\n     * this will be the path on the host origin where the SAML flow will be\n     * terminated.\n     *\n     * Eg: \"/dashboard\", \"#/foo\" [Do not include the host]\n     * @version SDK: 1.10.2 | 8.2.0.cl, 8.4.1-sw\n     */\n    redirectPath?: string;\n\n    /** @internal */\n    basepath?: string;\n\n    /**\n     * Should we encode URL Query Params using base64 encoding which thoughtspot\n     * will generate for embedding. This provides additional security to\n     * thoughtspot clusters against Cross site scripting attacks.\n     * @default false\n     */\n    shouldEncodeUrlQueryParams?: boolean;\n\n    /**\n     * Suppress cookie access alert when third party cookies are blocked by the user's browser.\n     * Third party cookie blocking is the default behaviour on Safari and opt-in for Firefox/Chrome.\n     * If you set this to `true`, you are encouraged to handle `noCookieAccess` event, to show your own treatment\n     * in this case.\n     * @default false\n     */\n    suppressNoCookieAccessAlert?: boolean;\n\n    /**\n     * Re-login when session expires with the previous login options\n     * @default false\n     */\n    autoLogin?: boolean;\n\n    /**\n     * Disable redirection to the login page when the embedded session expires\n     * This flag is typically used alongside the combination of auth modes such as {@link AuthType.AuthServer} and auto login behavior {@link EmbedConfig.autoLogin}\n     * @version SDK: 1.9.3 | ThoughtSpot: 8.1.0.cl, 8.4.1-sw\n     * @default false\n     */\n    disableLoginRedirect?: boolean;\n\n    /**\n     * This message is displayed on the embed view when the login fails.\n     * @version SDK: 1.10.1 | ThoughtSpot: 8.2.0.cl, 8.4.1-sw\n     */\n    loginFailedMessage?: string;\n\n    /**\n     * Calls the prefetch method internally when set to true\n     * @default false\n     */\n    callPrefetch?: boolean;\n\n    /**\n     * When there are multiple embeds, queue the render of embed to start\n     *  after the previous embed's render is complete. This helps in the load performance\n     *  by decreasing the load on the browser.\n     *  @Version SDK: 1.5.0 | ThoughtSpot: ts7.oct.cl, 7.2.1\n     * @default false\n     */\n    queueMultiRenders?: boolean;\n\n    /**\n     * Dynamic CSS Url to be injected in the loaded application.\n     * You would also need to set `style-src` in the CSP settings.\n     * @version SDK: 1.6.0 | ThoughtSpot: ts8.nov.cl, 8.4.1-sw\n     * @default ''\n     */\n    customCssUrl?: string;\n    /**\n     * [AuthServer|Basic] Detect if 3rd party cookies are enabled by doing an additional call. This is slower\n     * and should be avoided. Listen to the NO_COOKIE_ACCESS event to handle the situation.\n     *\n     * This is slightly slower than letting the browser handle the cookie check, as it involves an extra network call.\n     * @version SDK: 1.10.4 | ThoughtSpot: 8.2.0.cl, 8.4.1-sw\n     */\n    detectCookieAccessSlow?: boolean;\n    /**\n     * Hide beta alert warning message for SearchEmbed.\n     *\n     * @version SDK: 1.12.0 | ThoughtSpot: 8.4.0.cl, 8.4.1-sw*\n     */\n    suppressSearchEmbedBetaWarning?: boolean;\n\n    /**\n     * Custom style params for embed Config.\n     *\n     * @version SDK: 1.17.0 | ThoughtSpot: 8.9.0.cl\n     */\n    customizations?: CustomisationsInterface;\n    /**\n     * For noRedirect SSO Auth, we need a button which the user\n     * click to trigger the flow. This is the containing element\n     * for that button.\n     *\n     * @version SDK: 1.17.0 | ThoughtSpot: *\n     */\n    authTriggerContainer?: string | HTMLElement;\n    /**\n     * Text to show in the button which triggers the popup auth flow.\n     * Default: \"Authorize\".\n     * @version SDK: 1.17.0 | ThoughtSpot: *\n     */\n    authTriggerText?: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface LayoutConfig {}\n\n/**\n * Embedded iFrame configuration\n */\nexport interface FrameParams {\n    /**\n     * The width of the iFrame (unit is pixels if numeric).\n     */\n    width?: number | string;\n    /**\n     * The height of the iFrame (unit is pixels if numeric).\n     */\n    height?: number | string;\n    /**\n     * This parameters will be passed on the iframe\n     * as is.\n     */\n    [key: string]: string | number | boolean | undefined;\n}\n\n/**\n * The configuration object for an embedded view.\n */\nexport interface ViewConfig {\n    /**\n     * @hidden\n     */\n    layoutConfig?: LayoutConfig;\n    /**\n     * The <b>width</b> and <b>height</b> dimensions to render an embedded object inside your app.  Specify the values in pixels or percentage.\n     */\n    frameParams?: FrameParams;\n    /**\n     * @hidden\n     */\n    theme?: string;\n    /**\n     * @hidden\n     */\n    // eslint-disable-next-line camelcase\n    styleSheet__unstable?: string;\n    /**\n     * The list of actions to disable from the primary menu, more menu\n     * (...), and the contextual menu.\n     */\n    disabledActions?: Action[];\n    /**\n     * The tooltip to display for disabled actions.\n     */\n    disabledActionReason?: string;\n    /**\n     * The list of actions to hide from the primary menu, more menu\n     * (...), and the contextual menu.\n     */\n    hiddenActions?: Action[];\n    /**\n     * The list of actions to display from the primary menu, more menu\n     * (...), and the contextual menu.\n     * @version SDK: 1.6.0 | ThoughtSpot: ts8.nov.cl, 8.4.1-sw\n     */\n    visibleActions?: Action[];\n    /**\n     * Show alert messages and toast messages in the embedded view.\n     * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n     */\n    showAlerts?: boolean;\n    /**\n     * The list of runtime filters to apply to a search answer,\n     * visualization, or Liveboard.\n     */\n    runtimeFilters?: RuntimeFilter[];\n    /**\n     * The locale/language to use for the embedded view.\n     * @version SDK: 1.9.4 | ThoughtSpot 8.1.0.cl, 8.4.1-sw\n     */\n    locale?: string;\n    /**\n     * This is an object (key/val) of override flags which will be applied\n     * to the internal embedded object. This can be used to add any\n     * URL flag.\n     * Warning: This option is for advanced use only and is used internally\n     * to control embed behavior in non-regular ways. We do not publish the\n     * list of supported keys and values associated with each.\n     * @version SDK: 1.9.0 | ThoughtSpot: 8.1.0.cl, 8.4.1-sw\n     */\n    additionalFlags?: { [key: string]: string | number | boolean };\n    /**\n     * Dynamic CSSUrl and customCSS to be injected in the loaded application.\n     * You would also need to set `style-src` in the CSP settings.\n     * @version SDK: 1.17.2 | ThoughtSpot: 8.4.1-sw, 8.4.0.cl\n     * @default ''\n     */\n    customizations?: CustomisationsInterface;\n}\n\n/**\n * MessagePayload: Embed event payload: message type, data and status (start/end)\n */\nexport type MessagePayload = {\n    /* type: message type eg: 'save' */\n    type: string;\n    /* data: message payload data eg: { answerId: '123' } */\n    data: any;\n    /* status: message payload status - start or end */\n    status?: string;\n};\n/**\n * MessageOptions: By Providing options, getting specific event start / end based on option\n */\nexport type MessageOptions = {\n    /* A boolean value indicating that start status events of this type will be dispatched */\n    start?: boolean;\n};\n/**\n * MessageCallback: Embed event message callback\n */\nexport type MessageCallback = (\n    /* payload: Message payload contain type, data and status */\n    payload: MessagePayload,\n    /* responder: Message callback function triggered when embed event initiated */\n    responder?: (data: any) => void,\n) => void;\n/**\n * MessageCallbackObj: contains message options & callback function\n */\nexport type MessageCallbackObj = {\n    /* options: It contains start, A boolean value indicating that start status events of this type will be dispatched */\n    /* callback: Embed event message callback */\n    options: MessageOptions;\n    callback: MessageCallback;\n};\n\nexport type GenericCallbackFn = (...args: any[]) => any;\n\nexport type QueryParams = {\n    [key: string]: string;\n};\n\n/**\n * A map of the supported runtime filter operations\n */\n// eslint-disable-next-line no-shadow\nexport enum RuntimeFilterOp {\n    /**\n     * Equals\n     */\n    EQ = 'EQ',\n    /**\n     * Does not equal\n     */\n    NE = 'NE',\n    /**\n     * Less than\n     */\n    LT = 'LT',\n    /**\n     * Less than or equal to\n     */\n    LE = 'LE',\n    /**\n     * Greater than\n     */\n    GT = 'GT',\n    /**\n     * Greater than or equal to\n     */\n    GE = 'GE',\n    /**\n     * Contains\n     */\n    CONTAINS = 'CONTAINS',\n    /**\n     * Begins with\n     */\n    BEGINS_WITH = 'BEGINS_WITH',\n    /**\n     * Ends with\n     */\n    ENDS_WITH = 'ENDS_WITH',\n    /**\n     * Between, inclusive of higher value\n     */\n    BW_INC_MAX = 'BW_INC_MAX',\n    /**\n     * Between, inclusive of lower value\n     */\n    BW_INC_MIN = 'BW_INC_MIN',\n    /**\n     * Between, inclusive of both higher and lower value\n     */\n    BW_INC = 'BW_INC',\n    /**\n     * Between, non-inclusive\n     */\n    BW = 'BW',\n    /**\n     * Is included in this list of values\n     */\n    IN = 'IN',\n}\n\n/**\n * A filter that can be applied to ThoughtSpot answers, Liveboards, or\n * visualizations at runtime.\n */\nexport interface RuntimeFilter {\n    /**\n     * The name of the column to filter on (case-sensitive)\n     */\n    columnName: string;\n    /**\n     * The operator to apply\n     */\n    operator: RuntimeFilterOp;\n    /**\n     * The list of operands. Some operators like EQ, LE accept\n     * a single operand, whereas other operators like BW and IN accept multiple operands.\n     */\n    values: (number | boolean | string)[];\n}\n\n/**\n * Event types emitted by the embedded ThoughtSpot application.\n */\n// eslint-disable-next-line no-shadow\nexport enum EmbedEvent {\n    /**\n     * Rendering has initialized.\n     * @return timestamp - The timestamp when the event was generated.\n     */\n    Init = 'init',\n    /**\n     * Authentication has either succeeded or failed.\n     * @return isLoggedIn - A Boolean specifying whether authentication was successful.\n     */\n    AuthInit = 'authInit',\n    /**\n     * The embed object container has loaded.\n     * @return timestamp - The timestamp when the event was generated.\n     */\n    Load = 'load',\n    /**\n     * Data pertaining to answer or Liveboard is received\n     * @return data - The answer or Liveboard data\n     */\n    Data = 'data',\n    /**\n     * Search/answer/Liveboard filters have been applied/updated\n     * @hidden\n     */\n    FiltersChanged = 'filtersChanged',\n    /**\n     * Search query has been updated\n     */\n    QueryChanged = 'queryChanged',\n    /**\n     * A drill down operation has been performed.\n     * @return additionalFilters - Any additional filters applied\n     * @return drillDownColumns - The columns on which drill down was performed\n     * @return nonFilteredColumns - The columns that were not filtered\n     */\n    Drilldown = 'drillDown',\n    /**\n     * One or more data sources have been selected.\n     * @return dataSourceIds - the list of data sources\n     */\n    DataSourceSelected = 'dataSourceSelected',\n    /**\n     * One or more data columns have been selected.\n     * @return columnIds - the list of columns\n     * @version SDK: 1.10.0 | ThoughtSpot: 8.2.0.cl, 8.4.1-sw\n     */\n    AddRemoveColumns = 'addRemoveColumns',\n    /**\n     * A custom action has been triggered\n     * @return actionId - The id of the custom action\n     * @return data - The answer or Liveboard data\n     */\n    CustomAction = 'customAction',\n    /**\n     * A double click has been triggered on table/chart\n     * @return ContextMenuInputPoints - data point that is double clicked\n     * @version SDK: 1.5.0 | ThoughtSpot: ts7.oct.cl, 7.2.1\n     */\n    VizPointDoubleClick = 'vizPointDoubleClick',\n    /**\n     * A click has been triggered on table/chart\n     * @return ContextMenuInputPoints - data point that is clicked\n     * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n     */\n    VizPointClick = 'vizPointClick',\n    /**\n     * An error has occurred.\n     * @return error - An error object or message\n     */\n    Error = 'Error',\n    /**\n     * The embedded object has sent an alert\n     * @return alert - An alert object\n     */\n    Alert = 'alert',\n    /**\n     * The ThoughtSpot auth session has expired.\n     */\n    AuthExpire = 'ThoughtspotAuthExpired',\n    /**\n     * ThoughtSpot failed to validate the auth session.\n     * @hidden\n     */\n    AuthFailure = 'ThoughtspotAuthFailure',\n    /**\n     * ThoughtSpot failed to validate the auth session.\n     * @hidden\n     */\n    AuthLogout = 'ThoughtspotAuthLogout',\n    /**\n     * The height of the embedded Liveboard or visualization has been computed.\n     * @return data - The height of the embedded Liveboard or visualization\n     * @hidden\n     */\n    EmbedHeight = 'EMBED_HEIGHT',\n    /**\n     * The center of visible iframe viewport is calculated.\n     * @return data - The center of the visible Iframe viewport.\n     * @hidden\n     */\n    EmbedIframeCenter = 'EmbedIframeCenter',\n    /**\n     * Detects the route change.\n     */\n    RouteChange = 'ROUTE_CHANGE',\n    /**\n     * The v1 event type for Data\n     * @hidden\n     */\n    V1Data = 'exportVizDataToParent',\n    /**\n     * Emitted when the embed does not have cookie access. This\n     * happens on Safari where third-party cookies are blocked by default.\n     *\n     * @version SDK: 1.1.0 | ThoughtSpot: ts7.may.cl, 7.2.1\n     */\n    NoCookieAccess = 'noCookieAccess',\n    /**\n     * Emitted when SAML is complete\n     * @private\n     * @hidden\n     */\n    SAMLComplete = 'samlComplete',\n    /**\n     * Emitted when any modal is opened in the app\n     * @version SDK: 1.6.0 | ThoughtSpot: ts8.nov.cl, 8.4.1-sw\n     */\n    DialogOpen = 'dialog-open',\n    /**\n     * Emitted when any modal is closed in the app\n     * @version SDK: 1.6.0 | ThoughtSpot: ts8.nov.cl, 8.4.1-sw\n     */\n    DialogClose = 'dialog-close',\n    /**\n     * Emitted when a liveboard has completed rendering,\n     * this event can be used as a hook to trigger events on the\n     * rendered liveboard\n     * @version SDK: 1.9.1 | ThoughtSpot: 8.1.0.cl, 8.4.1-sw\n     */\n    LiveboardRendered = 'PinboardRendered',\n    /**\n     * This can be used to register an event listener which\n     * is triggered on all events.\n     * @Version SDK: 1.10.0 | ThoughtSpot: 8.2.0.cl, 8.4.1-sw\n     */\n    ALL = '*',\n    /**\n     * Emitted when answer is saved in the app\n     * @Version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n     */\n    Save = 'save',\n    /**\n     * Emitted when the download action is triggered on an answer\n     * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n     */\n    Download = 'download',\n    /**\n     * Emitted when the Download as PDF action is triggered on an answer\n     * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n     */\n    DownloadAsPdf = 'downloadAsPdf',\n    /**\n     * Emitted when the Download as CSV action is triggered on an answer\n     * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n     */\n    DownloadAsCsv = 'downloadAsCsv',\n    /**\n     * Emitted when the Download as XLSX action is triggered on an answer\n     * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n     */\n    DownloadAsXlsx = 'downloadAsXlsx',\n    /**\n     * Emitted when an answer is deleted in the app\n     * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n     */\n    AnswerDelete = 'answerDelete',\n    /**\n     * Emitted when an answer is pinned to a Liveboard\n     * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n     */\n    Pin = 'pin',\n    /**\n     * Emitted when SpotIQ analysis is triggered\n     * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n     */\n    SpotIQAnalyze = 'spotIQAnalyze',\n    /**\n     * Emitted when a user shares an object with another user or group\n     * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n     */\n    Share = 'share',\n    /**\n     * Emitted when a user clicks the Include action to include a specific value or data on a chart or table\n     * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n     */\n    DrillInclude = 'context-menu-item-include',\n    /**\n     * Emitted when a user clicks the Exclude action to exclude a specific value or data on a chart or table\n     * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n     */\n    DrillExclude = 'context-menu-item-exclude',\n    /**\n     * Emitted when copied column value on the app\n     * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n     */\n    CopyToClipboard = 'context-menu-item-copy-to-clipboard',\n    /**\n     * Emitted when a user clicks the Update TML action\n     * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n     */\n    UpdateTML = 'updateTSL',\n    /**\n     * Emitted when a user clicks the Edit TML action\n     * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n     */\n    EditTML = 'editTSL',\n    /**\n     * Emitted when ExportTML trigger in answer on the app\n     * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n     */\n    ExportTML = 'exportTSL',\n    /**\n     * Emitted when an answer is saved as a view\n     * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n     */\n    SaveAsView = 'saveAsView',\n    /**\n     * Emitted when copy of existing answer on the app\n     * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n     */\n    CopyAEdit = 'copyAEdit',\n    /**\n     * Emitted when a user clicks Show underlying data on an answe\n     * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n     */\n    ShowUnderlyingData = 'showUnderlyingData',\n    /**\n     * Emitted when an answer is switched to a chart or table view\n     * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n     */\n    AnswerChartSwitcher = 'answerChartSwitcher',\n    /**\n     * Internal event to communicate the initial settings back to the TS APP\n     * @hidden\n     */\n    APP_INIT = 'appInit',\n    /**\n     * Emitted when a user clicks Show Liveboard details on a Liveboard\n     * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n     */\n    LiveboardInfo = 'pinboardInfo',\n    /**\n     * Emitted when a user clicks on the Favorite icon on a Liveboard\n     * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n     */\n    AddToFavorites = 'addToFavorites',\n    /**\n     * Emitted when a user clicks Schedule on a Liveboard\n     * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n     */\n    Schedule = 'subscription',\n    /**\n     * Emitted when a user clicks Edit on a Liveboard or visualization\n     * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n     */\n    Edit = 'edit',\n    /**\n     * Emitted when a user clicks Make a copy on a Liveboard\n     * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n     */\n    MakeACopy = 'makeACopy',\n    /**\n     * Emitted when a user clicks Present on a Liveboard or visualization\n     * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n     */\n    Present = 'present',\n    /**\n     * Emitted when a user clicks Delete on a Liveboard\n     * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n     */\n    Delete = 'delete',\n    /**\n     * Emitted when a user clicks Manage schedules on a Liveboard\n     * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n     */\n    SchedulesList = 'schedule-list',\n    /**\n     * Emitted when a user clicks Cancel in edit mode on a Liveboard\n     * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n     */\n    Cancel = 'cancel',\n    /**\n     * Emitted when a user clicks Explore on a visualization\n     * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n     */\n    Explore = 'explore',\n    /**\n     * Emitted when a user clicks Copy link action on a visualization\n     * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n     */\n    CopyLink = 'embedDocument',\n}\n\n/**\n * Event types that can be triggered by the host application\n * to the embedded ThoughtSpot app\n *\n * To trigger an event use the corresponding\n * {@link LiveboardEmbed.trigger} or {@link AppEmbed.trigger} or {@link SearchEmbed.trigger} method.\n */\n// eslint-disable-next-line no-shadow\nexport enum HostEvent {\n    /**\n     * Trigger a search\n     * @param - dataSourceIds - The list of data source GUIDs\n     * @param - searchQuery - The search query\n     * @example\n     * searchEmbed.trigger(HostEvent.Search, {\n     * searchQuery: \"[sales] by [item type],\n     * \"dataSourceIds: [\"cd252e5c-b552-49a8-821d-3eadaa049cca\"]\n     * })\n     */\n    Search = 'search',\n    /**\n     * Trigger a drill on certain points by certain column\n     * @param - points - an object containing selectedPoints/clickedPoints\n     *              eg. { selectedPoints: []}\n     * @param - columnGuid - a string guid of the column to drill by. This is optional,\n     *                     if not provided it will auto drill by the configured column.\n     * @example searchEmbed.trigger(HostEvent.DrillDown, {\n     * points: clickedPointData,\n     * autoDrillDown: true,\n     * })\n     * @version SDK: 1.5.0 | ThoughtSpot: ts7.oct.cl, 7.2.1\n     */\n    DrillDown = 'triggerDrillDown',\n    /**\n     * Apply filters\n     * @hidden\n     */\n    Filter = 'filter',\n    /**\n     * Reload the answer or visualization\n     * @hidden\n     */\n    Reload = 'reload',\n    /**\n     * Set the visible visualizations on a Liveboard.\n     * @param - an array of ids of visualizations to show, the ids not passed\n     *          will be hidden.\n     * @example\n     * liveboardEmbed.trigger(HostEvent.SetVisibleVizs, ['730496d6-6903-4601-937e-2c691821af3c', 'd547ec54-2a37-4516-a222-2b06719af726'])\n     * @version SDK: 1.6.0 | ThoughtSpot: ts8.nov.cl, 8.4.1-sw\n     */\n    SetVisibleVizs = 'SetPinboardVisibleVizs',\n    /**\n     * Update the runtime filters. The runtime filters passed here are extended\n     * on to the existing runtime filters if they exist.\n     * @param - {@link RuntimeFilter}[] an array of {@link RuntimeFilter} Types.\n     * @example\n     * liveboardEmbed.trigger(HostEvent.UpdateRuntimeFilters, [\n     * {columnName: \"state\",operator: RuntimeFilterOp.EQ,values: [\"michigan\"]},\n     * {columnName: \"item type\",operator: RuntimeFilterOp.EQ,values: [\"Jackets\"]}\n     * ])\n     * @version SDK: 1.9.0 | ThoughtSpot: 8.1.0.cl, 8.4.1-sw\n     */\n    UpdateRuntimeFilters = 'UpdateRuntimeFilters',\n    /**\n     * Navigate to a specific page in App embed without any reload.\n     * This is the same as calling `appEmbed.navigateToPage(path, true)`\n     * @param - path - the path to navigate to (can be a number[1/-1] to go forward/back)\n     * @example appEmbed.navigateToPage(-1)\n     * @version SDK: 1.12.0 | ThoughtSpot 8.4.0.cl, 8.4.1-sw\n     */\n    Navigate = 'Navigate',\n    /**\n     * Gets the current pinboard content.\n     * @example liveboardEmbed.trigger(HostEvent.getExportRequestForCurrentPinboard)\n     * @version SDK: 1.13.0 | ThoughtSpot: 8.5.0.cl, 8.8.1-sw\n     */\n    getExportRequestForCurrentPinboard = 'getExportRequestForCurrentPinboard',\n    /**\n     * Triggers the Pin action on an embedded object\n     * @param - incase of Liveboard embed, takes in an object with vizId as a key\n     * can be left empty for search and visualization embeds\n     * @example liveboardEmbed.trigger(HostEvent.Pin, {vizId: '730496d6-6903-4601-937e-2c691821af3c'})\n     * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n     */\n    Pin = 'pin',\n    /**\n     * Triggers the Show Liveboard details action on a Liveboard\n     * @example liveboardEmbed.trigger(HostEvent.LiveboardInfo)\n     * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n     */\n    LiveboardInfo = 'pinboardInfo',\n    /**\n     * Triggers the Schedule action on a Liveboard\n     * @example liveboardEmbed.trigger(HostEvent.Schedule)\n     * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n     */\n    Schedule = 'subscription',\n    /**\n     * Triggers the Manage schedule action on a Liveboard\n     * @example liveboardEmbed.trigger(HostEvent.ScheduleList)\n     * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n     */\n    SchedulesList = 'schedule-list',\n    /**\n     * Triggers the Export TML action on a Liveboard\n     * @example liveboardEmbed.trigger(HostEvent.ExportTML)\n     * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n     */\n    ExportTML = 'exportTSL',\n    /**\n     * Triggers the Edit TML action on a Liveboard\n     * @example liveboardEmbed.trigger(HostEvent.EditTML)\n     * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n     */\n    EditTML = 'editTSL',\n    /**\n     * Triggers the Update TML action on a Liveboard\n     * @example liveboardEmbed.trigger(HostEvent.UpdateTML)\n     * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n     */\n    UpdateTML = 'updateTSL',\n    /**\n     * Triggers the Download PDF action on a Liveboard\n     * @example liveboardEmbed.trigger(HostEvent.DownloadAsPDF)\n     * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n     */\n    DownloadAsPdf = 'downloadAsPdf',\n    /**\n     * Triggers the Make a copy action on a Liveboard\n     * @example liveboardEmbed.trigger(HostEvent.MakeACopy)\n     * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n     */\n    MakeACopy = 'makeACopy',\n    /**\n     * Triggers the Delete action on a Liveboard\n     * @example appEmbed.trigger(HostEvent.Remove)\n     * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n     */\n    Remove = 'delete',\n    /**\n     * Triggers the Explore action on a visualization\n     * @param - an object with vizId as a key\n     * @example liveboardEmbed.trigger(HostEvent.Explore, {vizId: '730496d6-6903-4601-937e-2c691821af3c'})\n     * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n     */\n    Explore = 'explore',\n    /**\n     * Triggers the Create alert action on a visualization\n     * @param - an object with vizId as a key\n     * @example liveboardEmbed.trigger(HostEvent.CreateMonitor {vizId: '730496d6-6903-4601-937e-2c691821af3c'})\n     * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n     */\n    CreateMonitor = 'createMonitor',\n    /**\n     * Triggers the Manage alert action on a visualization\n     * @param - an object with vizId as a key\n     * @example liveboardEmbed.trigger(HostEvent.ManageMonitor, {vizId: '730496d6-6903-4601-937e-2c691821af3c'})\n     * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n     */\n    ManageMonitor = 'manageMonitor',\n    /**\n     * Triggers the Edit action on a Liveboard or visualization\n     * @param - object - to trigger the action for a specfic visualization in Liveboard embed, pass in vizId as a key\n     * @example\n     * liveboardEmbed.trigger(HostEvent.Edit)\n     * liveboardEmbed.trigger(HostEvent.Edit, {vizId: '730496d6-6903-4601-937e-2c691821af3c'})\n     * vizEmbed.trigger((HostEvent.Edit)\n     * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n     */\n    Edit = 'edit',\n    /**\n     * Triggers the Copy link action on a Liveboard or visualization\n     * @param - object - to trigger the action for a specfic visualization in Liveboard embed, pass in vizId as a key\n     * @example\n     * liveboardEmbed.trigger(HostEvent.CopyLink)\n     * liveboardEmbed.trigger(HostEvent.CopyLink, {vizId: '730496d6-6903-4601-937e-2c691821af3c'})\n     * vizEmbed.trigger((HostEvent.CopyLink)\n     * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n     */\n    CopyLink = 'embedDocument',\n    /**\n     * Triggers the Present action on a Liveboard or visualization\n     * @param - object - to trigger the action for a specfic visualization in Liveboard embed, pass in vizId as a key\n     * @example\n     * liveboardEmbed.trigger(HostEvent.Present)\n     * liveboardEmbed.trigger(HostEvent.Present, {vizId: '730496d6-6903-4601-937e-2c691821af3c'})\n     * vizEmbed.trigger((HostEvent.Present)\n     * @version SDK: 1.15.0 | ThoughtSpot: 8.7.0.cl, 8.8.1-sw\n     */\n    Present = 'present',\n    /**\n     * Get TML for the current search.\n     * @example searchEmbed.trigger(HostEvent.GetTML)\n     * @version SDK: 1.18.0 | ThoughtSpot: 8.10.0.cl, 9.0.1-sw\n     */\n    GetTML = 'getTML',\n    /**\n     * Triggers the Share action on a liveboard or answer\n     * @example\n     * liveboardEmbed.trigger(HostEvent.Share)\n     * searchEmbed.trigger(HostEvent.Share)\n     * @version SDK: 1.19.0 | Thoughtspot: 9.0.0.cl, 9.0.1-sw\n     */\n    Share = 'share',\n    /**\n     * Trigger the Save action on a liveboard or answer\n     * @example\n     * liveboardEmbed.trigger(HostEvent.Save)\n     * searchEmbed.trigger(HostEvent.Save)\n     * @version SDK: 1.19.0 | Thoughtspot: 9.0.0.cl, 9.0.1-sw\n     */\n    Save = 'save',\n}\n\n/**\n * The different visual modes that the data sources panel within\n * search could appear in, i.e., hidden, collapsed, or expanded.\n */\n// eslint-disable-next-line no-shadow\nexport enum DataSourceVisualMode {\n    /**\n     * Data source panel is hidden.\n     */\n    Hidden = 'hide',\n    /**\n     * Data source panel is collapsed, but the user can manually expand it.\n     */\n    Collapsed = 'collapse',\n    /**\n     * Data source panel is expanded, but the user can manually collapse it.\n     */\n    Expanded = 'expand',\n}\n\n/**\n * The query params passed down to the embedded ThoughtSpot app\n * containing configuration and/or visual information.\n */\n// eslint-disable-next-line no-shadow\nexport enum Param {\n    DataSources = 'dataSources',\n    DataSourceMode = 'dataSourceMode',\n    DisableActions = 'disableAction',\n    DisableActionReason = 'disableHint',\n    ForceTable = 'forceTable',\n    preventLiveboardFilterRemoval = 'preventPinboardFilterRemoval', // update-TSCB\n    SearchQuery = 'searchQuery',\n    HideActions = 'hideAction',\n    HideObjects = 'hideObjects',\n    HostAppUrl = 'hostAppUrl',\n    EnableVizTransformations = 'enableVizTransform',\n    EnableSearchAssist = 'enableSearchAssist',\n    HideResult = 'hideResult',\n    UseLastSelectedDataSource = 'useLastSelectedSources',\n    Tag = 'tag',\n    searchTokenString = 'searchTokenString',\n    executeSearch = 'executeSearch',\n    fullHeight = 'isFullHeightPinboard',\n    livedBoardEmbed = 'isLiveboardEmbed',\n    searchEmbed = 'isSearchEmbed',\n    vizEmbed = 'isVizEmbed',\n    Version = 'sdkVersion',\n    ViewPortHeight = 'viewPortHeight',\n    ViewPortWidth = 'viewPortWidth',\n    VisibleActions = 'visibleAction',\n    CustomCSSUrl = 'customCssUrl',\n    DisableLoginRedirect = 'disableLoginRedirect',\n    visibleVizs = 'pinboardVisibleVizs',\n    LiveboardV2Enabled = 'isPinboardV2Enabled',\n    ShowAlerts = 'showAlerts',\n    Locale = 'locale',\n    CustomStyle = 'customStyle',\n    ForceSAMLAutoRedirect = 'forceSAMLAutoRedirect',\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    AuthType = 'authType',\n}\n\n/**\n * The list of actions that can be performed on visual ThoughtSpot\n * entities, such as answers and Liveboards.\n */\n// eslint-disable-next-line no-shadow\nexport enum Action {\n    Save = 'save',\n    /**\n     * @hidden\n     */\n    Update = 'update',\n    /**\n     * @hidden\n     */\n    SaveUntitled = 'saveUntitled',\n    SaveAsView = 'saveAsView',\n    MakeACopy = 'makeACopy',\n    EditACopy = 'editACopy',\n    CopyLink = 'embedDocument',\n    /**\n     * @hidden\n     */\n    ResetLayout = 'resetLayout',\n    Schedule = 'subscription',\n    SchedulesList = 'schedule-list',\n    Share = 'share',\n    AddFilter = 'addFilter',\n    ConfigureFilter = 'configureFilter',\n    /**\n     * @hidden\n     */\n    AddFormula = 'addFormula',\n    /**\n     * @hidden\n     */\n    SearchOnTop = 'searchOnTop',\n    SpotIQAnalyze = 'spotIQAnalyze',\n    /**\n     * @hidden\n     */\n    ExplainInsight = 'explainInsight',\n    /**\n     * @hidden\n     */\n    SpotIQFollow = 'spotIQFollow',\n    ShareViz = 'shareViz',\n    /**\n     * @hidden\n     */\n    ReplaySearch = 'replaySearch',\n    ShowUnderlyingData = 'showUnderlyingData',\n    Download = 'download',\n    DownloadAsPdf = 'downloadAsPdf',\n    DownloadAsCsv = 'downloadAsCSV',\n    DownloadAsXlsx = 'downloadAsXLSX',\n    /**\n     * @hidden\n     */\n    DownloadTrace = 'downloadTrace',\n    ExportTML = 'exportTSL',\n    ImportTML = 'importTSL',\n    UpdateTML = 'updateTSL',\n    EditTML = 'editTSL',\n    Present = 'present',\n    ToggleSize = 'toggleSize',\n    Edit = 'edit',\n    EditTitle = 'editTitle',\n    Remove = 'delete',\n    /**\n     * @hidden\n     */\n    Ungroup = 'ungroup',\n    /**\n     * @hidden\n     */\n    Describe = 'describe',\n    /**\n     * @hidden\n     */\n    Relate = 'relate',\n    /**\n     * @hidden\n     */\n    CustomizeHeadlines = 'customizeHeadlines',\n    /**\n     * @hidden\n     */\n    PinboardInfo = 'pinboardInfo',\n    LiveboardInfo = 'pinboardInfo',\n    /**\n     * @hidden\n     */\n    SendAnswerFeedback = 'sendFeedback',\n    /**\n     * @hidden\n     */\n    DownloadEmbraceQueries = 'downloadEmbraceQueries',\n    Pin = 'pin',\n    /**\n     * @hidden\n     */\n    AnalysisInfo = 'analysisInfo',\n    Subscription = 'subscription',\n    Explore = 'explore',\n    DrillInclude = 'context-menu-item-include',\n    DrillExclude = 'context-menu-item-exclude',\n    CopyToClipboard = 'context-menu-item-copy-to-clipboard',\n    CopyAndEdit = 'context-menu-item-copy-and-edit',\n    /**\n     * @hidden\n     */\n    DrillEdit = 'context-menu-item-edit',\n    EditMeasure = 'context-menu-item-edit-measure',\n    Separator = 'context-menu-item-separator',\n    /**\n     * @hidden\n     */\n    DrillDown = 'DRILL',\n    RequestAccess = 'requestAccess',\n    QueryDetailsButtons = 'queryDetailsButtons',\n    /**\n     * @version SDK: 1.9.0 | ThoughtSpot: 8.1.0.cl, 8.4.1-sw\n     */\n    AnswerDelete = 'onDeleteAnswer',\n    /**\n     * @version SDK: 1.9.0 | ThoughtSpot: 8.1.0.cl, 8.4.1-sw\n     */\n    AnswerChartSwitcher = 'answerChartSwitcher',\n    /**\n     * @version SDK: 1.9.0 | ThoughtSpot: 8.1.0.cl, 8.4.1-sw\n     */\n    AddToFavorites = 'addToFavorites',\n    /**\n     * @version SDK: 1.9.0 | ThoughtSpot: 8.1.0.cl, 8.4.1-sw\n     */\n    EditDetails = 'editDetails',\n    /**\n     * @version SDK: 1.11.0 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n     */\n    CreateMonitor = 'createMonitor',\n    /**\n     * @version SDK: 1.11.1 | ThoughtSpot: 8.3.0.cl, 8.4.1-sw\n     */\n    ReportError = 'reportError',\n    SyncToSheets = 'sync-to-sheets',\n    SyncToOtherApps = 'sync-to-other-apps',\n    ManagePipelines = 'manage-pipeline',\n}\n\nexport interface SessionInterface {\n    sessionId: string;\n    genNo: number;\n    acSession: { sessionId: string; genNo: number };\n}\n\n// eslint-disable-next-line no-shadow\nexport enum OperationType {\n    GetChartWithData = 'GetChartWithData',\n    GetTableWithHeadlineData = 'GetTableWithHeadlineData',\n}\n\nexport interface AnswerServiceType {\n    getAnswer?: (offset: number, batchSize: number) => any;\n}\n\nexport enum PrefetchFeatures {\n    FullApp = 'FullApp',\n    SearchEmbed = 'SearchEmbed',\n    LiveboardEmbed = 'LiveboardEmbed',\n    VizEmbed = 'VizEmbed',\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}